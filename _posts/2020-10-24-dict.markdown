---
layout: post
title:  "Python dict and Data Transfer"
date:   2020-10-24 10:30:57 -0400
categories: data tools
---
## 1. dict 

The dictionary is one of the most useful Python objects for data structuring and transfer. They are defined as a series of key-value pairs, where the key is a string index and the values can be any object type (numbers, strings, lists, or other dicts):

{% highlight python %}
# init
d = {}
d = {'a':0,'b':1,'c':2}
d = dict(zip(['a','b','c'],range(0,3)))
# set key to value
d['key'] = value
d['d'] = 4
d['d']
# check if value has key
key in value
{% endhighlight %}

Data tables can be naturally constructed from dictionaries, where the key serves as column name and the values are taken as row values or indexed row values. This makes initializing a pandas DataFrame from a dictionary very simple:

Example from Federal Reserve (FRED) API:

{% highlight python %}
df = {}
df['UNRATE'] = fred.get_series('UNRATE')
df['CSUSHPINSA'] = fred.get_series('CSUSHPINSA')
df['GDP'] = fred.get_series('GDP')
df['NASDAQCOM'] = fred.get_series('NASDAQCOM')
df = pd.DataFrame(df)
{% endhighlight %}


If building a dict iteratively, the append() method can be passed as long as the defaultdict object is used. This specialized case assigns a default object type so that methods are inherited.

{% highlight python %}
from collections import defaultdict
d = defaultdict(list)
for i in range(0,10):
	d['ones'].append(i)
	d['twos'].append(2*i)
	d['threes'].append(3*i)
{% endhighlight %}


<br/><br/>

## 2. JSON

Javascript Object Notation (JSON) is a file format standard for data interchange. It is structured as a series of nested dicts or key-value pairs. Comparable to Extensible Markup Languauge (XML), it was originally developed for server-to-browser Web applications. 

The defaultdict object above would be represented by the string:

{% highlight python %}
{
    "ones": [
        0,
        1,
        2,
        3
    ],
    "twos": [
        0,
        2,
        4,
        6
    ],
    "threes": [
        0,
        3,
        6,
        9
    ]
}
{% endhighlight %}

Python comes with a [built-in json package](https://docs.python.org/3/library/json.html) to encode/decode JSON format.

{% highlight python %}
import json
# as string
json.dumps(d,indent=4)
# write to file
with open('data.json', 'w') as fp:
  json.dump(d, fp, indent=4)
# read from file
with open('data.json', 'r') as fp:
  d = json.load(fp)
{% endhighlight %}

JSON files are very useful when encoding nested tables and metadata, meaning information about other datasets such source or shared column names. 

<br/><br/>

## 3. HTML requests and Web APIs

JSON is often used to transfer data over the internet. 

<br/><br/>

## 4. REST Framework for Web Applications

